/* Main container for the entire page */
.pageContainer {
  display: flex;
  flex-direction: column;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-primary);
  color: var(--text-primary);
  overflow: hidden;
  z-index: 0;
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Add a background element to cover any gaps */
.pageContainer::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-primary);
  z-index: -1;
  transition: background-color 0.3s ease;
}

/* Header container */
.headerContainer {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1000;
  height: 60px; /* Should match the header height */
  background-color: var(--bg-primary);
  transition: background-color 0.3s ease;
}

/* Main content area */
.mainContent {
  display: flex;
  position: fixed;
  top: 60px;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--bg-primary);
  overflow: hidden;
  z-index: 0;
  transition: background-color 0.3s ease;
}

/* Left sidebar container */
.sidebarContainer {
  width: 330px; /* Match sidebar width */
  flex-shrink: 0;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  background-color: var(--bg-secondary);
  overflow: hidden;
  transition: transform 0.3s ease, background-color 0.3s ease;
  z-index: 100; /* Ensure sidebar is above overlay */
}

.sidebarScrollable {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; 
  overflow-y: auto; /* Enable independent scrolling */
  background-color: var(--bg-secondary);
  /* Ensure bottom is covered */
  padding-bottom: 20px;
  transition: background-color 0.3s ease;
}

/* Content container */
.contentContainer {
  flex: 1;
  position: absolute;
  top: 0;
  left: 330px; /* Match sidebar width */
  right: 0;
  bottom: 0;
  background-color: var(--bg-primary);
  overflow: hidden;
  transition: left 0.3s ease, background-color 0.3s ease;
}

.contentScrollable {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow-y: auto; /* Enable independent scrolling */
  padding: 30px;
  background-color: var(--bg-primary);
  /* Ensure bottom is covered */
  padding-bottom: 40px;
  scrollbar-width: none;
  transition: background-color 0.3s ease;
}

/* Page header styling */
.pageHeader {
  margin-bottom: 24px;
}

.pageHeader h1 {
  font-size: 24px;
  font-weight: 600;
  margin-bottom: 8px;
  color: var(--text-primary);
  transition: color 0.3s ease;
}

.pageDescription {
  font-size: 16px;
  color: var(--text-tertiary);
  margin-bottom: 0;
  transition: color 0.3s ease;
}

.searchQuery {
  color: var(--accent-color);
  font-weight: 500;
  transition: color 0.3s ease;
}

/* Filter controls */
.filtersContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding: 16px;
  background-color: var(--bg-secondary);
  border-radius: 8px;
  flex-wrap: wrap;
  gap: 16px;
  transition: background-color 0.3s ease;
}

.filterGroup {
  display: flex;
  gap: 12px;
}

.filterSelect {
  background-color: var(--bg-tertiary);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  padding: 8px 12px;
  font-size: 14px;
  cursor: pointer;
  appearance: none;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right 8px center;
  background-size: 16px;
  padding-right: 32px;
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.filterSelect:focus {
  outline: none;
  border-color: var(--accent-color);
}

.searchGroup {
  display: flex;
  align-items: center;
  gap: 12px;
}

.searchForm {
  position: relative;
  width: 240px;
}

.searchInput {
  width: 100%;
  height: 36px;
  background-color: var(--bg-tertiary);
  border: 1px solid var(--border-color);
  border-radius: 18px;
  padding: 0 36px 0 16px;
  color: var(--text-primary);
  font-size: 14px;
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.searchInput:focus {
  outline: none;
  border-color: var(--accent-color);
}

.searchButton {
  position: absolute;
  right: 0;
  top: 0;
  background: none;
  border: none;
  color: var(--text-tertiary);
  cursor: pointer;
  height: 36px;
  width: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: color 0.3s ease;
}

.searchButton:hover {
  color: var(--text-primary);
}

.viewToggle {
  display: flex;
  align-items: center;
  background-color: var(--bg-tertiary);
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid var(--border-color);
  transition: background-color 0.3s ease, border-color 0.3s ease;
}

.viewButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--text-tertiary);
  cursor: pointer;
  height: 36px;
  width: 36px;
  transition: all 0.2s ease, color 0.3s ease, background-color 0.3s ease;
}

.viewButton:hover {
  color: var(--text-primary);
  background-color: var(--hover-overlay);
}

.viewButton.active {
  color: var(--text-primary);
  background-color: var(--hover-overlay);
}

/* Active filters display */
.activeFilters {
  display: flex;
  align-items: center;
  margin-bottom: 24px;
  flex-wrap: wrap;
  gap: 8px;
}

.activeFiltersLabel {
  color: var(--text-tertiary);
  font-size: 14px;
  margin-right: 8px;
  transition: color 0.3s ease;
}

.filterTags {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}

.filterTag {
  display: flex;
  align-items: center;
  gap: 6px;
  background-color: var(--bg-tertiary);
  border-radius: 16px;
  padding: 4px 12px;
  font-size: 13px;
  color: var(--text-primary);
  transition: background-color 0.3s ease, color 0.3s ease;
}

.removeFilterButton {
  display: flex;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  color: var(--text-tertiary);
  cursor: pointer;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  padding: 0;
  transition: color 0.3s ease, background-color 0.3s ease;
}

.removeFilterButton:hover {
  color: var(--text-primary);
  background-color: var(--hover-overlay);
}

.clearAllFiltersButton {
  background: none;
  border: none;
  color: var(--accent-color);
  cursor: pointer;
  font-size: 13px;
  padding: 4px 8px;
  margin-left: 8px;
  transition: color 0.3s ease;
}

.clearAllFiltersButton:hover {
  text-decoration: underline;
}

/* Mobile overlay for sidebar toggle */
.mobileOverlay {
  display: none;
  position: fixed;
  top: 60px;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 90; /* Lower than sidebar */
  backdrop-filter: blur(4px);
}

/* Responsive adjustments */
@media (max-width: 1300px) {
  /* Hide left sidebar by default, will be shown with toggle */
  .sidebarContainer {
    transform: translateX(-100%);
    transition: transform 0.3s ease, background-color 0.3s ease;
  }
  
  /* Show sidebar when open class is applied */
  .sidebarContainer.open {
    transform: translateX(0);
  }
  
  /* Adjust content container to take full width */
  .contentContainer {
    left: 0;
  }
  
  /* Show overlay when sidebar is open */
  .mobileOverlay {
    display: none; /* Hidden by default */
  }
  
  /* When sidebar is open, show the overlay but only to the right of the sidebar */
  .open ~ .mobileOverlay,
  .open + .mobileOverlay,
  .open ~ * .mobileOverlay {
    display: block;
    left: 0px; /* Width of the sidebar on mobile */
  }
}

@media (max-width: 992px) {
  .mainContent {
    flex-direction: column;
  }
  
  .sidebarContainer {
    width: 330px;
  }
  
  /* Update overlay left position to match sidebar width */
  .open ~ .mobileOverlay,
  .open + .mobileOverlay,
  .open ~ * .mobileOverlay {
    left: 0px;
  }
  
  .filtersContainer {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .filterGroup,
  .searchGroup {
    width: 100%;
  }
  
  .searchForm {
    width: 100%;
  }
}

@media (max-width: 768px) {
  .contentScrollable {
    padding: 20px;
  }
  
  .sidebarContainer {
    width: 330px;
  }
  
  .sidebarScrollable {
    width: 220px;
  }

  /* Update overlay left position to match sidebar width */
  .open ~ .mobileOverlay,
  .open + .mobileOverlay,
  .open ~ * .mobileOverlay {
    left: 220px;
  }
  
  .pageHeader h1 {
    font-size: 22px;
  }
  
  .pageDescription {
    font-size: 14px;
  }
  
  .filterGroup {
    flex-direction: column;
    gap: 8px;
  }
}

@media (max-width: 480px) {
  .sidebarContainer {
    width: 200px; /* Even narrower for small screens */
  }
  
  /* Update overlay left position to match sidebar width */
  .open ~ .mobileOverlay,
  .open + .mobileOverlay,
  .open ~ * .mobileOverlay {
    left: 200px;
  }
  
  .contentScrollable {
    padding: 16px;
    padding-bottom: 40px;
  }
  
  .pageHeader h1 {
    font-size: 20px;
  }
  
  .viewToggle {
    display: none;
  }
}